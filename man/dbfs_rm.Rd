% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/dbfs_rm.R
\name{dbfs_rm}
\alias{dbfs_rm}
\title{Delete a file or directory on DBFS}
\usage{
dbfs_rm(path, recursive = "false", workspace, token = NULL, verbose = T, ...)
}
\arguments{
\item{path}{A string representing the path to delete in DBFS}

\item{recursive}{Should the deletes be recursive or not?  Defaults to 'false'}

\item{workspace}{A string representing the web workspace of your Databricks
instance. E.g., "https://eastus2.azuredatabricks.net" or
"https://demo.cloud.databricks.com".}

\item{token}{A valid authentication token generated via User Settings in
Databricks or via the Databricks REST API 2.0.  If none is provided,
netrc will be used}

\item{verbose}{If TRUE, will print the API response to the console.  Defaults to
FALSE.}

\item{...}{Additional options to be passed}
}
\value{
The API response
}
\description{
Delete the file or directory (optionally recursively delete all files in
the directory). This call throws an exception with IO_ERROR if the path is
a non-empty directory and recursive is set to false or on other similar errors.
When you delete a large number of files, the delete operation is done in increments.
The call returns a response after approximately 45s with an error message
(503 Service Unavailable) asking you to re-invoke the delete operation until the
directory structure is fully deleted.
}
\details{
The API endpoint for creating a path on DBFS is '2.0/dbfs/delete'.
  For all details on API calls please see the official documentation at
\url{https://docs.databricks.com/dev-tools/api/latest/}.
}
\examples{
# No need to include /dbfs/
path <- "/rk/data/new_dir"

dbfs_rm(path = path, workspace = workspace)
}
