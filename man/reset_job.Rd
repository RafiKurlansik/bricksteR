% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/reset_job.R
\name{reset_job}
\alias{reset_job}
\title{Reset the configuration of a Job on Databricks}
\usage{
reset_job(
  job_id = NULL,
  name = NULL,
  new_config,
  workspace,
  token = NULL,
  verbose = T
)
}
\arguments{
\item{job_id}{A number representing the unique identifier of a job on Databricks.}

\item{name}{A string representing the name of the job.  It is encouraged
to choose a unique name for each job.}

\item{new_config}{A JSON formatted string or file specifying the details of
the job, i.e., the name, cluster spec, and so on.}

\item{workspace}{A string representing the web workspace of your Databricks
instance. E.g., "https://eastus2.azuredatabricks.net" or
"https://demo.cloud.databricks.com".}

\item{token}{A valid authentication token generated via User Settings in
Databricks or via the Databricks REST API 2.0.  If none is provided,
netrc will be used.}

\item{verbose}{If true, will pretty print the success or failure of the
request.  Defaults to TRUE.}
}
\value{
The complete API response.
}
\description{
This function will reset the configuration of an existing job
on Databricks.
}
\details{
The API endpoint for creating a job is '2.0/jobs/create'.  For all details
on API calls please see the official documentation at
\url{https://docs.databricks.com/dev-tools/api/latest/}.
}
\examples{
# JSON string or file path can be passed
new_config <- "/configs/nightly_model_training.json"

reset_job(job_id = 30198, new_config, workspace)

# Reset by name
reset_job(name = "My R Job", new_config, workspace, token = "dapi1908sfapf2")
}
