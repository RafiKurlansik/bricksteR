% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/libraries_uninstall.R
\name{libraries_uninstall}
\alias{libraries_uninstall}
\title{Uninstall Packages (libraries) on a Databricks Cluster}
\usage{
libraries_uninstall(
  cluster_id,
  package,
  workspace,
  token = NULL,
  verbose = T,
  ...
)
}
\arguments{
\item{cluster_id}{A string containing the unique id for an online
Databricks cluster.}

\item{package}{A string with the name of the package to uninstall.}

\item{workspace}{A string representing the web workspace of your Databricks
instance. E.g., "https://eastus2.azuredatabricks.net" or
"https://demo.cloud.databricks.com".}

\item{token}{A valid authentication token generated via User Settings in
Databricks or via the Databricks REST API 2.0.  If none is provided,
netrc will be used.}

\item{verbose}{If TRUE, will print the API response to the console.  Defaults to
FALSE.}
}
\value{
The API response.
}
\description{
Set libraries to be uninstalled on a cluster. The libraries arenâ€™t
uninstalled until the cluster is restarted. Uninstalling libraries
that are not installed on the cluster has no impact but is not an error.
You can locate the cluster ID in the URL of the cluster configuration page.
For example:
}
\details{
https://mycompany.cloud.databricks.com/#/setting/clusters/xxxx-xxxxx-xxxxxx/

Where xxxx-xxxxx-xxxxxx is the cluster ID.

The API endpoint for uninstalling libraries is
'2.0/libraries/uninstall'.
  For all details on API calls please see the official documentation at
\url{https://docs.databricks.com/dev-tools/api/latest/}.
}
\examples{
# Cluster to install on
workspace <- "https://mydb.cloud.databricks.com"
cluster_id <- "0818-155203-cheese22"

# Uninstall package
libraries_uninstall(package = "broom", cluster_id, workspace)

# Check installation status
get_library_statuses(cluster_id, workspace)
}
