% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/curate.R
\name{curate}
\alias{curate}
\title{Curate a shared or personal library of packages}
\usage{
curate(
  pkg,
  repo = "https://packagemanager.rstudio.com/all/__linux__/xenial/latest",
  version = NULL,
  lib = .libPaths()[1],
  git_provider = NULL,
  ...
)
}
\arguments{
\item{pkg}{String, name of package to install or a valid URL if using GitHub/Gitlab}

\item{repo}{Where to pull the package from.  Default is RStudio Package Manager
(https://packagemanager.rstudio.com/all/__linux__/xenial/latest).  If NULL, specify
the path to a source file in `pkgs`.}

\item{version}{The desired version of the package to install.  Defaults to latest.}

\item{lib}{String, the path to the library where packages will be installed.  Default
is the first path on `.libPaths()`.  It's recommended to use `set_library()` prior to
`curate()`}

\item{git_provider}{String, one of "github" or "gitlab".  Default is NULL.}

\item{...}{Additional arguments to be passed to `install.packages`,
`remotes::install_version`, `remotes::install_github`, and `remotes::install_gitlab`.}
}
\value{
The user library path
}
\description{
Helper function to manage package installation across libraries
}
\details{
`curate()` lets you easily install packages into different libraries.  It will
manage the copying of packages to a path on DBFS, which will persist them from
session to session on Databricks.
}
\examples{
# Setting user library first
set_library("/dbfs/rk/my_packages")
curate(pkg = "broom")

# Install version, setting user library
curate(pkg = "broom", version = "0.4.2", lib = set_library("/dbfs/rk/my_old_packages"))

# Install GitHub
curate(repo = "RafiKurlansik/bricksteR")

# Install Gitlab
curate(repo = "jimhester/covr")
}
